{
  "x-generator": "NSwag v14.2.0.0 (NJsonSchema v11.1.0.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "C4WX1.API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://localhost:7055"
    }
  ],
  "paths": {
    "/api/sysconfig": {
      "put": {
        "tags": [
          "Sysconfig"
        ],
        "summary": "Update SysConfig",
        "description": "Update one or multiple existing SysConfigs",
        "operationId": "C4WX1APIFeaturesSysConfigUpdateUpdate",
        "requestBody": {
          "x-name": "List`1",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "example": [
                  {
                    "ConfigName": "Config1",
                    "ConfigValue": "Value1",
                    "UserID": 1
                  },
                  {
                    "ConfigName": "Config2",
                    "ConfigValue": "Value2",
                    "UserID": 1
                  }
                ],
                "items": {
                  "$ref": "#/components/schemas/C4WX1APIFeaturesSysConfigDtosUpdateSysConfigDto"
                }
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": "SysConfig updated successfully"
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsInternalErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "SysConfig not found"
          }
        }
      },
      "get": {
        "tags": [
          "Sysconfig"
        ],
        "summary": "Get SysConfig List",
        "description": "Get a filtered, paged and sorted list of SysConfigs",
        "operationId": "C4WX1APIFeaturesSysConfigGetGetList",
        "parameters": [
          {
            "name": "ConfigName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "ConfigValue",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "PageIndex",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "SysConfig List retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/C4WX1APIFeaturesSysConfigDtosSysConfigDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsInternalErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Sysconfig"
        ],
        "summary": "Create SysConfig",
        "description": "Create a new SysConfig",
        "operationId": "C4WX1APIFeaturesSysConfigCreateCreate",
        "requestBody": {
          "x-name": "CreateSysConfigDto",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/C4WX1APIFeaturesSysConfigDtosCreateSysConfigDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": "SysConfig created successfully"
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsInternalErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/sysconfig/config-name/{configName}": {
      "get": {
        "tags": [
          "Sysconfig"
        ],
        "summary": "Get SysConfig",
        "description": "Get SysConfig by its ConfigName",
        "operationId": "C4WX1APIFeaturesSysConfigGetGet",
        "parameters": [
          {
            "name": "configName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "SysConfig retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/C4WX1APIFeaturesSysConfigDtosSysConfigDto"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsInternalErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "SysConfig not found"
          }
        }
      }
    },
    "/api/sysconfig/all": {
      "get": {
        "tags": [
          "Sysconfig"
        ],
        "summary": "Get All SysConfig",
        "description": "Get all SysConfigs",
        "operationId": "C4WX1APIFeaturesSysConfigGetGetAllList",
        "responses": {
          "200": {
            "description": "SysConfig List retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/C4WX1APIFeaturesSysConfigDtosSysConfigDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsInternalErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/sysconfig/count": {
      "get": {
        "tags": [
          "Sysconfig"
        ],
        "summary": "Get SysConfig Count",
        "description": "Get the number of SysConfigs",
        "operationId": "C4WX1APIFeaturesSysConfigGetGetCount",
        "responses": {
          "200": {
            "description": "Number of SysConfigs retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsInternalErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/chat/{id}": {
      "get": {
        "tags": [
          "Chat"
        ],
        "summary": "Get Chat",
        "description": "Get Chat by its ID",
        "operationId": "C4WX1APIFeaturesChatGetGetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Chat retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/C4WX1APIFeaturesChatDtosChatDto"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsInternalErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Chat"
        ],
        "summary": "Delete Chat",
        "description": "Delete an existing Chat",
        "operationId": "C4WX1APIFeaturesChatDeleteDelete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "x-name": "DeleteByIdDto",
          "description": "",
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/C4WX1APIFeaturesSharedDtosDeleteByIdDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/C4WX1APIFeaturesSharedDtosDeleteByIdDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": "Chat deleted successfully"
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsInternalErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Chat not found"
          }
        }
      }
    },
    "/api/chat/can-load-more": {
      "get": {
        "tags": [
          "Chat"
        ],
        "summary": "Get Can Load More Chat",
        "description": "Check if there are more chats to load",
        "operationId": "C4WX1APIFeaturesChatGetGetCanLoadMore",
        "parameters": [
          {
            "name": "Min",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PatientId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "UserId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsInternalErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/chat/latest": {
      "get": {
        "tags": [
          "Chat"
        ],
        "summary": "Get Latest Chat List",
        "description": "Get the latest Chat list",
        "operationId": "C4WX1APIFeaturesChatGetGetLatestList",
        "parameters": [
          {
            "name": "ChatID",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PatientID",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "UserID",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "Count",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Family",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Chat list retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/C4WX1APIFeaturesChatDtosChatDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsInternalErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/chat/previous": {
      "get": {
        "tags": [
          "Chat"
        ],
        "summary": "Get Previous Chat List",
        "description": "Get the previous Chat list",
        "operationId": "C4WX1APIFeaturesChatGetGetPreviousList",
        "parameters": [
          {
            "name": "ChatID",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PatientID",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "UserID",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "Count",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Family",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Chat list retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/C4WX1APIFeaturesChatDtosChatDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsInternalErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/chat": {
      "post": {
        "tags": [
          "Chat"
        ],
        "summary": "Create Chat",
        "description": "Create a new Chat",
        "operationId": "C4WX1APIFeaturesChatCreateCreate",
        "requestBody": {
          "x-name": "CreateChatDto",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/C4WX1APIFeaturesChatDtosCreateChatDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Chat created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/C4WX1APIFeaturesChatDtosChatDto"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsInternalErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Chat not found"
          }
        }
      }
    },
    "/api/care-plan-sub-goal/{carePlanSubGoalID}": {
      "put": {
        "tags": [
          "Care-Plan-Sub-Goal"
        ],
        "summary": "Update Care Plan Sub Goal",
        "description": "Update a new Care Plan Sub Goal",
        "operationId": "C4WX1APIFeaturesCarePlanSubGoalUpdateUpdate",
        "parameters": [
          {
            "name": "carePlanSubGoalID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "x-name": "UpdateCarePlanSubGoalDto",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/C4WX1APIFeaturesCarePlanSubGoalDtosUpdateCarePlanSubGoalDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": "Care Plan Sub Goal updated successfully"
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsInternalErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Care Plan Sub Goal not found"
          }
        }
      }
    },
    "/api/care-plan-sub-goal/{id}": {
      "get": {
        "tags": [
          "Care-Plan-Sub-Goal"
        ],
        "summary": "Get Care Plan Sub Goal",
        "description": "Get a Care Plan Sub Goal by its ID",
        "operationId": "C4WX1APIFeaturesCarePlanSubGoalGetGetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Care Plan Sub Goal retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/C4WX1APIFeaturesCarePlanSubGoalDtosCarePlanSubGoalDto"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsInternalErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Care Plan Sub Goal not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Care-Plan-Sub-Goal"
        ],
        "summary": "Delete Care Plan Sub Goal",
        "description": "Delete a Care Plan Sub Goal by its ID",
        "operationId": "C4WX1APIFeaturesCarePlanSubGoalDeleteDelete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "x-name": "DeleteByIdDto",
          "description": "",
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/C4WX1APIFeaturesSharedDtosDeleteByIdDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/C4WX1APIFeaturesSharedDtosDeleteByIdDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsInternalErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Care Plan Sub Goal not found"
          }
        }
      }
    },
    "/api/care-plan-sub-goal/count": {
      "get": {
        "tags": [
          "Care-Plan-Sub-Goal"
        ],
        "summary": "Get Care Plan Sub Goal Count",
        "description": "Get Care Plan Sub Goal Count",
        "operationId": "C4WX1APIFeaturesCarePlanSubGoalGetGetCount",
        "responses": {
          "200": {
            "description": "Care Plan Sub Goal Count retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsInternalErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/care-plan-sub-goal": {
      "get": {
        "tags": [
          "Care-Plan-Sub-Goal"
        ],
        "summary": "Get Care Plan Sub Goal List",
        "description": "Get a paged and sorted Care Plan Sub Goal List",
        "operationId": "C4WX1APIFeaturesCarePlanSubGoalGetGetList",
        "parameters": [
          {
            "name": "PageIndex",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Care Plan Sub Goal List retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/C4WX1APIFeaturesCarePlanSubGoalDtosCarePlanSubGoalDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsInternalErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Care-Plan-Sub-Goal"
        ],
        "summary": "Create Care Plan Sub Goal",
        "description": "Create a new Care Plan Sub Goal",
        "operationId": "C4WX1APIFeaturesCarePlanSubGoalCreateCreate",
        "requestBody": {
          "x-name": "CreateCarePlanSubGoalDto",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/C4WX1APIFeaturesCarePlanSubGoalDtosCreateCarePlanSubGoalDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": "Care Plan Sub Goal created successfully"
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsInternalErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/c4w-image/{c4wImageId}": {
      "put": {
        "tags": [
          "C4w-Image"
        ],
        "summary": "Update C4W Image",
        "description": "Update an existing C4W Image",
        "operationId": "C4WX1APIFeaturesC4WImageUpdateUpdate",
        "parameters": [
          {
            "name": "c4wImageId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "x-name": "UpdateC4WImageDto",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/C4WX1APIFeaturesC4WImageDtosUpdateC4WImageDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": "C4W Image updated successfully"
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsInternalErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "C4W Image not found"
          }
        }
      }
    },
    "/api/c4w-image/{id}": {
      "get": {
        "tags": [
          "C4w-Image"
        ],
        "summary": "Get C4W Image",
        "description": "Get a C4W Image by its ID",
        "operationId": "C4WX1APIFeaturesC4WImageGetGetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "C4W Image retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/C4WX1APIFeaturesC4WImageDtosC4WImageDto"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsInternalErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "C4W Image not found"
          }
        }
      }
    },
    "/api/c4w-image/count": {
      "get": {
        "tags": [
          "C4w-Image"
        ],
        "summary": "Get C4W Image Count",
        "description": "Get C4W Image Count based on its CreatedDate",
        "operationId": "C4WX1APIFeaturesC4WImageGetGetCount",
        "parameters": [
          {
            "name": "FromDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "ToDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "C4W Image Count retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsInternalErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/c4w-image": {
      "get": {
        "tags": [
          "C4w-Image"
        ],
        "summary": "Get C4W Image List",
        "description": "Get a filtered, paged and sorted C4W Image List",
        "operationId": "C4WX1APIFeaturesC4WImageGetGetList",
        "parameters": [
          {
            "name": "FromDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "ToDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "PageIndex",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "C4W Image List retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/C4WX1APIFeaturesC4WImageDtosC4WImageDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsInternalErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "C4w-Image"
        ],
        "summary": "Create C4W Image",
        "description": "Create a new C4W Image",
        "operationId": "C4WX1APIFeaturesC4WImageCreateCreate",
        "requestBody": {
          "x-name": "CreateC4WImageDto",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/C4WX1APIFeaturesC4WImageDtosCreateC4WImageDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": "C4W Image created successfully"
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsInternalErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/c4w-device-token/{c4WDeviceTokenId}": {
      "put": {
        "tags": [
          "C4w-Device-Token"
        ],
        "summary": "Update C4W Device Token",
        "description": "Update an existing C4W Device Token",
        "operationId": "C4WX1APIFeaturesC4WDeviceTokenUpdateUpdate",
        "parameters": [
          {
            "name": "c4WDeviceTokenId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "x-name": "UpdateC4WDeviceTokenDto",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/C4WX1APIFeaturesC4WDeviceTokenDtosUpdateC4WDeviceTokenDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": "C4W Device Token updated successfully"
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsInternalErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/c4w-device-token/old-device-token": {
      "get": {
        "tags": [
          "C4w-Device-Token"
        ],
        "summary": "Get C4W Device Token by Old Device Token",
        "description": "Get a C4W Device Token by Old Device Token",
        "operationId": "C4WX1APIFeaturesC4WDeviceTokenGetGetByOldDeviceToken",
        "parameters": [
          {
            "name": "OldDeviceToken",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "C4W Device Token retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/C4WX1APIFeaturesC4WDeviceTokenDtosC4WDeviceTokenDto"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsInternalErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "C4W Device Token not found"
          }
        }
      }
    },
    "/api/c4w-device-token": {
      "post": {
        "tags": [
          "C4w-Device-Token"
        ],
        "summary": "Create C4W Device Token",
        "description": "Create a new C4W Device Token",
        "operationId": "C4WX1APIFeaturesC4WDeviceTokenCreateCreate",
        "requestBody": {
          "x-name": "CreateC4WDeviceTokenDto",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/C4WX1APIFeaturesC4WDeviceTokenDtosCreateC4WDeviceTokenDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsInternalErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/branch/{branchID}": {
      "put": {
        "tags": [
          "Branch"
        ],
        "summary": "Update Branch",
        "description": "Update an existing Branch by its ID",
        "operationId": "C4WX1APIFeaturesBranchUpdateUpdate",
        "parameters": [
          {
            "name": "branchID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "x-name": "UpdateBranchDto",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/C4WX1APIFeaturesBranchDtosUpdateBranchDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": "Branch updated successfully"
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsInternalErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Branch data invalid",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Branch not found"
          }
        }
      }
    },
    "/api/branch/{id}": {
      "get": {
        "tags": [
          "Branch"
        ],
        "summary": "Get Branch",
        "description": "Get Branch by its ID",
        "operationId": "C4WX1APIFeaturesBranchGetGetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Branch retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/C4WX1APIFeaturesBranchDtosBranchDto"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsInternalErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Branch not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Branch"
        ],
        "summary": "Delete Branch",
        "description": "Delete an existing Branch by its ID",
        "operationId": "C4WX1APIFeaturesBranchDeleteDelete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "x-name": "DeleteBranchDto",
          "description": "",
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/C4WX1APIFeaturesBranchDtosDeleteBranchDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/C4WX1APIFeaturesBranchDtosDeleteBranchDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": "Branch deleted successfully"
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsInternalErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Branch cannot be deleted",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Branch not found"
          }
        }
      }
    },
    "/api/branch/count": {
      "get": {
        "tags": [
          "Branch"
        ],
        "summary": "Get Branch Count",
        "description": "Get number of Branch",
        "operationId": "C4WX1APIFeaturesBranchGetGetCount",
        "responses": {
          "200": {
            "description": "Branch Count retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsInternalErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/branch": {
      "get": {
        "tags": [
          "Branch"
        ],
        "summary": "Get Branch List",
        "description": "Get a paged and sorted Branch List",
        "operationId": "C4WX1APIFeaturesBranchGetGetList",
        "parameters": [
          {
            "name": "PageIndex",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Branch List retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/C4WX1APIFeaturesBranchDtosBranchDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsInternalErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Branch"
        ],
        "summary": "Create Branch",
        "description": "Create a new Branch",
        "operationId": "C4WX1APIFeaturesBranchCreateCreate",
        "requestBody": {
          "x-name": "CreateBranchDto",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/C4WX1APIFeaturesBranchDtosCreateBranchDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": "Branch created successfully"
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsInternalErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Branch data invalid",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/branch/for-control": {
      "get": {
        "tags": [
          "Branch"
        ],
        "summary": "Get Branch List for Control",
        "description": "Get sorted Branch List for Control",
        "operationId": "C4WX1APIFeaturesBranchGetGetListForControl",
        "responses": {
          "200": {
            "description": "Branch List retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/C4WX1APIFeaturesBranchDtosBranchDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsInternalErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/billing-proposal/{id}": {
      "put": {
        "tags": [
          "Billing-Proposal"
        ],
        "summary": "Update Billing Proposal",
        "description": "Update Billing Proposal by its ID",
        "operationId": "C4WX1APIFeaturesBillingProposalUpdateUpdate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "x-name": "UpdateBillingProposalDto",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/C4WX1APIFeaturesBillingProposalDtosUpdateBillingProposalDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": "Billing Proposal updated successfully"
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsInternalErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Billing Proposal not found"
          }
        }
      },
      "get": {
        "tags": [
          "Billing-Proposal"
        ],
        "summary": "Get Billing Proposal",
        "description": "Get Billing Proposal by its ID",
        "operationId": "C4WX1APIFeaturesBillingProposalGetGetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Billing Proposal retrieved succesfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/C4WX1APIFeaturesBillingProposalDtosBillingProposalDto"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsInternalErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Billing Proposal not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Billing-Proposal"
        ],
        "summary": "Delete Billing Proposal",
        "description": "Delete Billing Proposal by its ID",
        "operationId": "C4WX1APIFeaturesBillingProposalDeleteDelete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "x-name": "DeleteBillingProposalDto",
          "description": "",
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/C4WX1APIFeaturesBillingProposalDtosDeleteBillingProposalDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/C4WX1APIFeaturesBillingProposalDtosDeleteBillingProposalDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsInternalErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Billing Proposal not found"
          }
        }
      }
    },
    "/api/billing-proposal/{id}/status": {
      "put": {
        "tags": [
          "Billing-Proposal"
        ],
        "summary": "Update Billing Proposal Status",
        "description": "Update Billing Proposal Status by its ID",
        "operationId": "C4WX1APIFeaturesBillingProposalUpdateUpdateStatus",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "x-name": "UpdateBillingProposalStatusDto",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/C4WX1APIFeaturesBillingProposalDtosUpdateBillingProposalStatusDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsInternalErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Billing Proposal not found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Billing Proposal Status invalid"
          }
        }
      }
    },
    "/api/billing-proposal/active/{patientId}": {
      "get": {
        "tags": [
          "Billing-Proposal"
        ],
        "summary": "Get Active Billing Proposal List",
        "description": "Get filtered and sorted Active Billing Proposal List by PatientID",
        "operationId": "C4WX1APIFeaturesBillingProposalGetGetActiveList",
        "parameters": [
          {
            "name": "patientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Billing Proposal List retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/C4WX1APIFeaturesBillingProposalDtosBillingProposalDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsInternalErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/billing-proposal/all": {
      "get": {
        "tags": [
          "Billing-Proposal"
        ],
        "summary": "Get All Billing Proposal List",
        "description": "Get all filtered and sorted Billing Proposal List",
        "operationId": "C4WX1APIFeaturesBillingProposalGetGetAllList",
        "parameters": [
          {
            "name": "Keyword",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Status",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Billing Proposal List retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/C4WX1APIFeaturesBillingProposalDtosBillingProposalDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsInternalErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/billing-proposal/count": {
      "get": {
        "tags": [
          "Billing-Proposal"
        ],
        "summary": "Get Billing Proposal Count",
        "description": "Get filtered Billing Proposal Count",
        "operationId": "C4WX1APIFeaturesBillingProposalGetGetCount",
        "parameters": [
          {
            "name": "Keyword",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Status",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Billing Proposal Count retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsInternalErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/billing-proposal/history": {
      "get": {
        "tags": [
          "Billing-Proposal"
        ],
        "summary": "Get History Billing Proposal List",
        "description": "Get filtered and sorted History Billing Proposal List",
        "operationId": "C4WX1APIFeaturesBillingProposalGetGetHistoryList",
        "parameters": [
          {
            "name": "GroupNumber",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Billing Proposal List retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/C4WX1APIFeaturesBillingProposalDtosBillingProposalDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsInternalErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/billing-proposal": {
      "get": {
        "tags": [
          "Billing-Proposal"
        ],
        "summary": "Get Billing Proposal List",
        "description": "Get a filtered, paged and sorted list of Billing Proposals",
        "operationId": "C4WX1APIFeaturesBillingProposalGetGetList",
        "parameters": [
          {
            "name": "Keyword",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Status",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "PageIndex",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Billing Proposal List retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/C4WX1APIFeaturesBillingProposalDtosBillingProposalDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsInternalErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Billing-Proposal"
        ],
        "summary": "Create Billing Proposal",
        "description": "Create new Billing Proposal",
        "operationId": "C4WX1APIFeaturesBillingProposalCreateCreate",
        "requestBody": {
          "x-name": "CreateBillingProposalDto",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/C4WX1APIFeaturesBillingProposalDtosCreateBillingProposalDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsInternalErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/billing-proposal/session-balance": {
      "get": {
        "tags": [
          "Billing-Proposal"
        ],
        "summary": "Get Billing Proposal Session Balance",
        "description": "Get Billing Proposal Session Balance by its ProposalId, ServiceId and EndDate",
        "operationId": "C4WX1APIFeaturesBillingProposalGetGetSessionBalance",
        "parameters": [
          {
            "name": "ProposalId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ServiceId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Billing Proposal Session Balance retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsInternalErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/api-access-key/{id}": {
      "get": {
        "tags": [
          "Api-Access-Key"
        ],
        "summary": "Get APIAccessKey",
        "description": "Get APIAccessKey by its ID or Access Key",
        "operationId": "C4WX1APIFeaturesAPIAccessKeyGetGet",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AccessKey",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "APIAccessKey retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/C4WX1APIFeaturesAPIAccessKeyDtosAPIAccessKeyDto"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsInternalErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "APIAccessKey not found"
          }
        }
      }
    },
    "/api/api-access-key": {
      "post": {
        "tags": [
          "Api-Access-Key"
        ],
        "summary": "Create APIAccessKey",
        "description": "Create a new APIAccessKey",
        "operationId": "C4WX1APIFeaturesAPIAccessKeyCreateCreate",
        "requestBody": {
          "x-name": "CreateAPIAccessKeyDto",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/C4WX1APIFeaturesAPIAccessKeyDtosCreateAPIAccessKeyDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "APIAccessKey created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/C4WX1APIFeaturesAPIAccessKeyDtosAPIAccessKeyDto"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsInternalErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "APIAccessKey not found"
          }
        }
      }
    },
    "/api/activity/{activityID}": {
      "put": {
        "tags": [
          "Activity"
        ],
        "summary": "Update Activity",
        "description": "Update an existing Activity",
        "operationId": "C4WX1APIFeaturesActivityUpdateUpdate",
        "parameters": [
          {
            "name": "activityID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "x-name": "UpdateActivityDto",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/C4WX1APIFeaturesActivityDtosUpdateActivityDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": "Activity updated successfully"
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsInternalErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Activity not found"
          }
        }
      }
    },
    "/api/activity/{Id}": {
      "get": {
        "tags": [
          "Activity"
        ],
        "summary": "Get Activity",
        "description": "Get an Activity by its ID",
        "operationId": "C4WX1APIFeaturesActivityGetGetById",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Activity retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/C4WX1APIFeaturesActivityDtosActivityDto"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsInternalErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Activity not found"
          }
        }
      }
    },
    "/api/activity/count": {
      "get": {
        "tags": [
          "Activity"
        ],
        "summary": "Get Activity Count",
        "description": "Get the number of activities",
        "operationId": "C4WX1APIFeaturesActivityGetGetCount",
        "responses": {
          "200": {
            "description": "Number of activities retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsInternalErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/activity": {
      "get": {
        "tags": [
          "Activity"
        ],
        "summary": "Get Activity List",
        "description": "Get a list of activities",
        "operationId": "C4WX1APIFeaturesActivityGetGetList",
        "parameters": [
          {
            "name": "PageIndex",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Activity list retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/C4WX1APIFeaturesActivityDtosActivityDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsInternalErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Activity"
        ],
        "summary": "Create Activity",
        "description": "Create a new Activity",
        "operationId": "C4WX1APIFeaturesActivityCreateCreate",
        "requestBody": {
          "x-name": "CreateActivityDto",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/C4WX1APIFeaturesActivityDtosCreateActivityDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": "Activity created successfully"
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsInternalErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/activity/{id}": {
      "delete": {
        "tags": [
          "Activity"
        ],
        "summary": "Delete Activity",
        "description": "Delete an existing Activity",
        "operationId": "C4WX1APIFeaturesActivityDeleteDelete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "x-name": "DeleteByIdDto",
          "description": "",
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/C4WX1APIFeaturesSharedDtosDeleteByIdDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/C4WX1APIFeaturesSharedDtosDeleteByIdDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "204": {
            "description": "Activity deleted successfully"
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/FastEndpointsInternalErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Activity not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "FastEndpointsInternalErrorResponse": {
        "type": "object",
        "description": "the dto used to send an error response to the client when an unhandled exception occurs on the server",
        "additionalProperties": false,
        "properties": {
          "Status": {
            "type": "string",
            "description": "error status",
            "default": "Internal Server Error!"
          },
          "Code": {
            "type": "integer",
            "description": "http status code of the error response",
            "format": "int32",
            "default": 500
          },
          "Reason": {
            "type": "string",
            "description": "the reason for the error",
            "default": "Something unexpected has happened"
          },
          "Note": {
            "type": "string",
            "description": "additional information or instructions",
            "default": "See application log for stack trace."
          }
        }
      },
      "C4WX1APIFeaturesSysConfigDtosUpdateSysConfigDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ConfigName": {
            "type": "string"
          },
          "ConfigValue": {
            "type": "string"
          },
          "UserID": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "C4WX1APIFeaturesSysConfigDtosSysConfigDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ConfigName": {
            "type": "string"
          },
          "ConfigValue": {
            "type": "string",
            "nullable": true
          },
          "ModifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "ModifiedBy_FK": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "IsConfigurable": {
            "type": "boolean",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "C4WX1APIFeaturesSysConfigDtosGetSysConfigDto": {
        "type": "object",
        "additionalProperties": false
      },
      "C4WX1APIFeaturesSysConfigDtosGetSysConfigListDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/C4WX1APIFeaturesSharedDtosGetListDto"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "C4WX1APIFeaturesSharedDtosGetListDto": {
        "type": "object",
        "additionalProperties": false
      },
      "C4WX1APIFeaturesSysConfigDtosCreateSysConfigDto": {
        "type": "object",
        "example": {
          "ConfigName": "Config Name",
          "ConfigValue": "Config Value",
          "IsConfigurable": false,
          "Description": "Description"
        },
        "additionalProperties": false,
        "properties": {
          "ConfigName": {
            "type": "string"
          },
          "ConfigValue": {
            "type": "string",
            "nullable": true
          },
          "IsConfigurable": {
            "type": "boolean",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "C4WX1APIFeaturesChatDtosChatDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ChatID": {
            "type": "integer",
            "format": "int32"
          },
          "Comment": {
            "type": "string",
            "nullable": true
          },
          "Attachment": {
            "type": "string",
            "nullable": true
          },
          "Attachment_Physical": {
            "type": "string",
            "nullable": true
          },
          "ParentID_FK": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "PatientID_FK": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "CreatedDate": {
            "type": "string",
            "format": "date-time"
          },
          "CreatedBy_FK": {
            "type": "integer",
            "format": "int32"
          },
          "IsDeleted": {
            "type": "boolean"
          },
          "Family": {
            "type": "boolean",
            "nullable": true
          },
          "UserData": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/C4WX1APIFeaturesChatDtosChatUserDto"
              }
            ]
          },
          "PatientData": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/C4WX1APIFeaturesChatDtosChatPatientDto"
              }
            ]
          },
          "CommentList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/C4WX1APIFeaturesChatDtosChatDto"
            }
          }
        }
      },
      "C4WX1APIFeaturesChatDtosChatUserDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "UserId": {
            "type": "integer",
            "format": "int32"
          },
          "Firstname": {
            "type": "string"
          },
          "Lastname": {
            "type": "string"
          },
          "Photo": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "C4WX1APIFeaturesChatDtosChatPatientDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "PatientID": {
            "type": "integer",
            "format": "int32"
          },
          "Firstname": {
            "type": "string"
          },
          "Lastname": {
            "type": "string"
          },
          "Photo": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "C4WX1APIFeaturesSharedDtosGetByIdDto": {
        "type": "object",
        "additionalProperties": false
      },
      "C4WX1APIFeaturesChatDtosGetCanLoadMoreChatDto": {
        "type": "object",
        "additionalProperties": false
      },
      "C4WX1APIFeaturesChatDtosGetChatListDto": {
        "type": "object",
        "additionalProperties": false
      },
      "C4WX1APIFeaturesSharedDtosDeleteByIdDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "UserId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "FastEndpointsErrorResponse": {
        "type": "object",
        "description": "the dto used to send an error response to the client",
        "additionalProperties": false,
        "properties": {
          "StatusCode": {
            "type": "integer",
            "description": "the http status code sent to the client. default is 400.",
            "format": "int32",
            "default": 400
          },
          "Message": {
            "type": "string",
            "description": "the message for the error response",
            "default": "One or more errors occurred!"
          },
          "Errors": {
            "type": "object",
            "description": "the collection of errors for the current context",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "C4WX1APIFeaturesChatDtosCreateChatDto": {
        "type": "object",
        "example": {
          "Attachment": "Attachment",
          "Attachment_Physical": "Attachment_Physical",
          "CreatedBy_FK": 1,
          "ParentID_FK": 1,
          "PatientID_FK": 1,
          "Comment": "Comment",
          "Family": true
        },
        "additionalProperties": false,
        "properties": {
          "Attachment": {
            "type": "string",
            "nullable": true
          },
          "Attachment_Physical": {
            "type": "string",
            "nullable": true
          },
          "CreatedBy_FK": {
            "type": "integer",
            "format": "int32"
          },
          "ParentID_FK": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "PatientID_FK": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Comment": {
            "type": "string",
            "nullable": true
          },
          "Family": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "C4WX1APIFeaturesCarePlanSubGoalDtosUpdateCarePlanSubGoalDto": {
        "type": "object",
        "example": {
          "CarePlanSubID_FK": 1,
          "CarePlanSubGoalName": "care plan sub goal",
          "UserId": 1
        },
        "additionalProperties": false,
        "properties": {
          "CarePlanSubID_FK": {
            "type": "integer",
            "format": "int32"
          },
          "CarePlanSubGoalName": {
            "type": "string",
            "nullable": true
          },
          "UserId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "C4WX1APIFeaturesCarePlanSubGoalDtosCarePlanSubGoalDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "CarePlanSubGoalID": {
            "type": "integer",
            "format": "int32"
          },
          "ScoreTypeID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Score1": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "Score2": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "CarePlanSubGoalName": {
            "type": "string",
            "nullable": true
          },
          "IsDeleted": {
            "type": "boolean",
            "nullable": true
          },
          "CanDelete": {
            "type": "boolean"
          }
        }
      },
      "C4WX1APIFeaturesCarePlanSubGoalDtosCreateCarePlanSubGoalDto": {
        "type": "object",
        "example": {
          "CarePlanSubID_FK": 1,
          "CarePlanSubGoalName": "care plan sub goal",
          "UserId": 1
        },
        "additionalProperties": false,
        "properties": {
          "CarePlanSubID_FK": {
            "type": "integer",
            "format": "int32"
          },
          "CarePlanSubGoalName": {
            "type": "string",
            "nullable": true
          },
          "UserId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "C4WX1APIFeaturesC4WImageDtosUpdateC4WImageDto": {
        "type": "object",
        "example": {
          "WoundImageName": "wound image name",
          "WoundImageData": "wound image data",
          "WoundBedImageName": "wound bed image name",
          "WoundBedImageData": "wound bed image data",
          "TissueImageName": "tissue image name",
          "TissueImageData": "tissue image data",
          "DepthImageName": "depth image name",
          "DepthImageData": "depth image data",
          "UserId": 1
        },
        "additionalProperties": false,
        "properties": {
          "WoundImageName": {
            "type": "string",
            "nullable": true
          },
          "WoundImageData": {
            "type": "string",
            "nullable": true
          },
          "WoundBedImageName": {
            "type": "string",
            "nullable": true
          },
          "WoundBedImageData": {
            "type": "string",
            "nullable": true
          },
          "TissueImageName": {
            "type": "string",
            "nullable": true
          },
          "TissueImageData": {
            "type": "string",
            "nullable": true
          },
          "DepthImageName": {
            "type": "string",
            "nullable": true
          },
          "DepthImageData": {
            "type": "string",
            "nullable": true
          },
          "UserId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "C4WX1APIFeaturesC4WImageDtosC4WImageDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "C4WImageId": {
            "type": "integer",
            "format": "int32"
          },
          "WoundImageName": {
            "type": "string",
            "nullable": true
          },
          "WoundImageData": {
            "type": "string",
            "nullable": true
          },
          "WoundBedImageName": {
            "type": "string",
            "nullable": true
          },
          "WoundBedImageData": {
            "type": "string",
            "nullable": true
          },
          "TissueImageName": {
            "type": "string",
            "nullable": true
          },
          "TissueImageData": {
            "type": "string",
            "nullable": true
          },
          "DepthImageName": {
            "type": "string",
            "nullable": true
          },
          "DepthImageData": {
            "type": "string",
            "nullable": true
          },
          "IsDeleted": {
            "type": "boolean"
          },
          "CreatedDate": {
            "type": "string",
            "format": "date-time"
          },
          "CreatedBy_FK": {
            "type": "integer",
            "format": "int32"
          },
          "ModifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "C4WX1APIFeaturesC4WImageDtosGetC4WImageCountByDateDto": {
        "type": "object",
        "additionalProperties": false
      },
      "C4WX1APIFeaturesC4WImageDtosGetC4WImageListDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/C4WX1APIFeaturesSharedDtosGetListDto"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "C4WX1APIFeaturesC4WImageDtosCreateC4WImageDto": {
        "type": "object",
        "example": {
          "WoundImageName": "wound image name",
          "WoundImageData": "wound image data",
          "WoundBedImageName": "wound bed image name",
          "WoundBedImageData": "wound bed image data",
          "TissueImageName": "tissue image name",
          "TissueImageData": "tissue image data",
          "DepthImageName": "depth image name",
          "DepthImageData": "depth image data",
          "UserId": 1
        },
        "additionalProperties": false,
        "properties": {
          "WoundImageName": {
            "type": "string",
            "nullable": true
          },
          "WoundImageData": {
            "type": "string",
            "nullable": true
          },
          "WoundBedImageName": {
            "type": "string",
            "nullable": true
          },
          "WoundBedImageData": {
            "type": "string",
            "nullable": true
          },
          "TissueImageName": {
            "type": "string",
            "nullable": true
          },
          "TissueImageData": {
            "type": "string",
            "nullable": true
          },
          "DepthImageName": {
            "type": "string",
            "nullable": true
          },
          "DepthImageData": {
            "type": "string",
            "nullable": true
          },
          "UserId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "C4WX1APIFeaturesC4WDeviceTokenDtosUpdateC4WDeviceTokenDto": {
        "type": "object",
        "example": {
          "OldDeviceToken": "Old token",
          "NewDeviceToken": "New token",
          "ClientEnvironment": "test env",
          "Device": "IPhone",
          "UserId": 1
        },
        "additionalProperties": false,
        "properties": {
          "OldDeviceToken": {
            "type": "string",
            "nullable": true
          },
          "NewDeviceToken": {
            "type": "string",
            "nullable": true
          },
          "ClientEnvironment": {
            "type": "string",
            "nullable": true
          },
          "Device": {
            "type": "string",
            "nullable": true
          },
          "UserId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "C4WX1APIFeaturesC4WDeviceTokenDtosC4WDeviceTokenDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "C4WDeviceTokenId": {
            "type": "integer",
            "format": "int32"
          },
          "OldDeviceToken": {
            "type": "string",
            "nullable": true
          },
          "NewDeviceToken": {
            "type": "string",
            "nullable": true
          },
          "ClientEnvironment": {
            "type": "string",
            "nullable": true
          },
          "Device": {
            "type": "string",
            "nullable": true
          },
          "IsDeleted": {
            "type": "boolean"
          },
          "CreatedDate": {
            "type": "string",
            "format": "date-time"
          },
          "CreatedBy_FK": {
            "type": "integer",
            "format": "int32"
          },
          "ModifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "ModifiedBy_FK": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "C4WX1APIFeaturesC4WDeviceTokenDtosGetC4WDeviceTokenByOldDeviceTokenDto": {
        "type": "object",
        "additionalProperties": false
      },
      "C4WX1APIFeaturesC4WDeviceTokenDtosCreateC4WDeviceTokenDto": {
        "type": "object",
        "example": {
          "OldDeviceToken": "Old Token",
          "NewDeviceToken": "New Token",
          "ClientEnvironment": "test env",
          "Device": "Iphone",
          "UserId": 1
        },
        "additionalProperties": false,
        "properties": {
          "OldDeviceToken": {
            "type": "string",
            "nullable": true
          },
          "NewDeviceToken": {
            "type": "string",
            "nullable": true
          },
          "ClientEnvironment": {
            "type": "string",
            "nullable": true
          },
          "Device": {
            "type": "string",
            "nullable": true
          },
          "UserId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "C4WX1APIFeaturesBranchDtosUpdateBranchDto": {
        "type": "object",
        "example": {
          "BranchName": "BranchName",
          "Address1": "Address1",
          "Address2": "Address2",
          "Address3": "Address3",
          "Contact": "Contact",
          "Email": "test@test.com",
          "Status": "Active",
          "CurrencyID_FK": 1,
          "UserId": 1,
          "UserDataList": [
            {
              "UserId": 1,
              "FirstName": null,
              "LastName": null
            }
          ]
        },
        "additionalProperties": false,
        "properties": {
          "BranchName": {
            "type": "string"
          },
          "Address1": {
            "type": "string",
            "nullable": true
          },
          "Address2": {
            "type": "string",
            "nullable": true
          },
          "Address3": {
            "type": "string",
            "nullable": true
          },
          "Contact": {
            "type": "string",
            "nullable": true
          },
          "Email": {
            "type": "string",
            "nullable": true
          },
          "Status": {
            "type": "string"
          },
          "CurrencyID_FK": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "UserId": {
            "type": "integer",
            "format": "int32"
          },
          "UserDataList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/C4WX1APIFeaturesBranchDtosBranchUserDto"
            }
          }
        }
      },
      "C4WX1APIFeaturesBranchDtosBranchUserDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "UserId": {
            "type": "integer",
            "format": "int32"
          },
          "FirstName": {
            "type": "string"
          },
          "LastName": {
            "type": "string"
          }
        }
      },
      "C4WX1APIFeaturesBranchDtosBranchDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "BranchID": {
            "type": "integer",
            "format": "int32"
          },
          "BranchName": {
            "type": "string"
          },
          "Address1": {
            "type": "string",
            "nullable": true
          },
          "Address2": {
            "type": "string",
            "nullable": true
          },
          "Address3": {
            "type": "string",
            "nullable": true
          },
          "Contact": {
            "type": "string",
            "nullable": true
          },
          "Email": {
            "type": "string",
            "nullable": true
          },
          "Status": {
            "type": "string"
          },
          "IsSystemUsed": {
            "type": "boolean"
          },
          "CurrencyID_FK": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "CurrencyName": {
            "type": "string"
          },
          "CanDelete": {
            "type": "boolean"
          },
          "UserDataList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/C4WX1APIFeaturesBranchDtosBranchUserDto"
            }
          }
        }
      },
      "C4WX1APIFeaturesBranchDtosDeleteBranchDto": {
        "type": "object",
        "example": {
          "UserId": 1
        },
        "additionalProperties": false,
        "properties": {
          "UserId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "C4WX1APIFeaturesBranchDtosCreateBranchDto": {
        "type": "object",
        "example": {
          "BranchID": 0,
          "BranchName": "BranchName",
          "Address1": "Address1",
          "Address2": "Address2",
          "Address3": "Address3",
          "Contact": "Contact",
          "Email": "test@test.com",
          "Status": "Active",
          "CurrencyID_FK": 1,
          "UserId": 1,
          "UserDataList": [
            {
              "UserId": 1,
              "FirstName": null,
              "LastName": null
            }
          ]
        },
        "additionalProperties": false,
        "properties": {
          "BranchID": {
            "type": "integer",
            "format": "int32"
          },
          "BranchName": {
            "type": "string"
          },
          "Address1": {
            "type": "string",
            "nullable": true
          },
          "Address2": {
            "type": "string",
            "nullable": true
          },
          "Address3": {
            "type": "string",
            "nullable": true
          },
          "Contact": {
            "type": "string",
            "nullable": true
          },
          "Email": {
            "type": "string",
            "nullable": true
          },
          "Status": {
            "type": "string"
          },
          "CurrencyID_FK": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "UserId": {
            "type": "integer",
            "format": "int32"
          },
          "UserDataList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/C4WX1APIFeaturesBranchDtosBranchUserDto"
            }
          }
        }
      },
      "C4WX1APIFeaturesBillingProposalDtosUpdateBillingProposalDto": {
        "type": "object",
        "example": {
          "PatientID_FK": 1,
          "Title": "Title",
          "SendEmail": true,
          "EmailPatient": true,
          "EmailTo": "test-to@gmail.com",
          "EmailCC": "test-cc@gmail.com",
          "EmailBCC": "test-bcc@gmail.com",
          "CurrencyID_FK": 1,
          "Status": "Active",
          "GroupNumber": "1",
          "Version": 1,
          "ProposalType": "ProposalType",
          "UserId": 1,
          "ServiceList": [
            {
              "BillingInvoiceServiceID": 0,
              "BillingProposalID_FK": 0,
              "ServiceID_FK": 1,
              "CategoryId": 0,
              "Title": null,
              "StartDate": "2025-02-27T23:51:34.5331158+08:00",
              "EndDate": "2025-02-27T23:51:34.5365272+08:00",
              "UnitCost": 0.0,
              "Duration1": "Duration1",
              "Duration2": "Duration2",
              "Visit": 1,
              "Session": 0,
              "Discount": 0.0,
              "ServiceDescription": "ServiceDescription",
              "CategoryName": null
            }
          ]
        },
        "additionalProperties": false,
        "properties": {
          "PatientID_FK": {
            "type": "integer",
            "format": "int32"
          },
          "Title": {
            "type": "string"
          },
          "SendEmail": {
            "type": "boolean",
            "nullable": true
          },
          "EmailPatient": {
            "type": "boolean",
            "nullable": true
          },
          "EmailTo": {
            "type": "string",
            "nullable": true
          },
          "EmailCC": {
            "type": "string",
            "nullable": true
          },
          "EmailBCC": {
            "type": "string",
            "nullable": true
          },
          "CurrencyID_FK": {
            "type": "integer",
            "format": "int32"
          },
          "Status": {
            "type": "string"
          },
          "GroupNumber": {
            "type": "string"
          },
          "Version": {
            "type": "integer"
          },
          "ProposalType": {
            "type": "string"
          },
          "UserId": {
            "type": "integer",
            "format": "int32"
          },
          "ServiceList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/C4WX1APIFeaturesBillingProposalDtosBillingProposalServiceDto"
            }
          }
        }
      },
      "C4WX1APIFeaturesBillingProposalDtosBillingProposalServiceDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "BillingInvoiceServiceID": {
            "type": "integer",
            "format": "int32"
          },
          "BillingProposalID_FK": {
            "type": "integer",
            "format": "int32"
          },
          "ServiceID_FK": {
            "type": "integer",
            "format": "int32"
          },
          "CategoryId": {
            "type": "integer",
            "format": "int32"
          },
          "Title": {
            "type": "string"
          },
          "StartDate": {
            "type": "string",
            "format": "date-time"
          },
          "EndDate": {
            "type": "string",
            "format": "date-time"
          },
          "UnitCost": {
            "type": "number",
            "format": "decimal"
          },
          "Duration1": {
            "type": "string",
            "nullable": true
          },
          "Duration2": {
            "type": "string",
            "nullable": true
          },
          "Visit": {
            "type": "integer",
            "format": "int32"
          },
          "Session": {
            "type": "integer",
            "format": "int32"
          },
          "Discount": {
            "type": "number",
            "format": "decimal"
          },
          "ServiceDescription": {
            "type": "string",
            "nullable": true
          },
          "CategoryName": {
            "type": "string"
          }
        }
      },
      "C4WX1APIFeaturesBillingProposalDtosUpdateBillingProposalStatusDto": {
        "type": "object",
        "example": {
          "UserId": 1,
          "Status": "Success"
        },
        "additionalProperties": false,
        "properties": {
          "UserId": {
            "type": "integer",
            "format": "int32"
          },
          "Status": {
            "type": "string"
          }
        }
      },
      "C4WX1APIFeaturesBillingProposalDtosBillingProposalDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "BillingProposalID": {
            "type": "integer",
            "format": "int32"
          },
          "PatientID_FK": {
            "type": "integer",
            "format": "int32"
          },
          "ProposalNumber": {
            "type": "string"
          },
          "Title": {
            "type": "string"
          },
          "SendEmail": {
            "type": "boolean",
            "nullable": true
          },
          "EmailPatient": {
            "type": "boolean",
            "nullable": true
          },
          "EmailTo": {
            "type": "string",
            "nullable": true
          },
          "EmailCC": {
            "type": "string",
            "nullable": true
          },
          "EmailBCC": {
            "type": "string",
            "nullable": true
          },
          "CurrencyID_FK": {
            "type": "integer",
            "format": "int32"
          },
          "CurrencyCode": {
            "type": "string"
          },
          "TotalCost": {
            "type": "number",
            "format": "decimal"
          },
          "Status": {
            "type": "string"
          },
          "GroupNumber": {
            "type": "string"
          },
          "Version": {
            "type": "integer"
          },
          "CreatedDate": {
            "type": "string",
            "format": "date-time"
          },
          "CreatedBy_FK": {
            "type": "integer",
            "format": "int32"
          },
          "ModifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "ModifiedBy_FK": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "IsDeleted": {
            "type": "boolean"
          },
          "ProposalType": {
            "type": "string"
          },
          "PatientData": {
            "$ref": "#/components/schemas/C4WX1APIFeaturesBillingProposalDtosBillingProposalPatientDto"
          },
          "CreatedByData": {
            "$ref": "#/components/schemas/C4WX1APIFeaturesBillingProposalDtosBillingProposalUserDto"
          },
          "ModifiedByData": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/C4WX1APIFeaturesBillingProposalDtosBillingProposalUserDto"
              }
            ]
          },
          "ServiceList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/C4WX1APIFeaturesBillingProposalDtosBillingProposalServiceDto"
            }
          }
        }
      },
      "C4WX1APIFeaturesBillingProposalDtosBillingProposalPatientDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "PatientID": {
            "type": "integer",
            "format": "int32"
          },
          "FirstName": {
            "type": "string"
          },
          "LastName": {
            "type": "string"
          },
          "Photo": {
            "type": "string",
            "nullable": true
          },
          "MailingAddress1": {
            "type": "string",
            "nullable": true
          },
          "MailingAddress2": {
            "type": "string",
            "nullable": true
          },
          "MailingAddress3": {
            "type": "string",
            "nullable": true
          },
          "MailingPostalCode": {
            "type": "string",
            "nullable": true
          },
          "Profile": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/C4WX1APIFeaturesBillingProposalDtosBillingProposalPatientProfileDto"
              }
            ]
          }
        }
      },
      "C4WX1APIFeaturesBillingProposalDtosBillingProposalPatientProfileDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Email": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "C4WX1APIFeaturesBillingProposalDtosBillingProposalUserDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "UserId": {
            "type": "integer",
            "format": "int32"
          },
          "FirstName": {
            "type": "string"
          },
          "LastName": {
            "type": "string"
          },
          "Photo": {
            "type": "string",
            "nullable": true
          },
          "Email": {
            "type": "string"
          }
        }
      },
      "C4WX1APIFeaturesBillingProposalDtosGetActiveBillingProposalListDto": {
        "type": "object",
        "additionalProperties": false
      },
      "C4WX1APIFeaturesBillingProposalDtosGetAllBillingProposalListDto": {
        "type": "object",
        "additionalProperties": false
      },
      "C4WX1APIFeaturesBillingProposalDtosGetBillingProposalCountDto": {
        "type": "object",
        "additionalProperties": false
      },
      "C4WX1APIFeaturesBillingProposalDtosGetHistoryBillingProposalListDto": {
        "type": "object",
        "additionalProperties": false
      },
      "C4WX1APIFeaturesBillingProposalDtosGetBillingProposalListDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/C4WX1APIFeaturesSharedDtosGetListDto"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "C4WX1APIFeaturesBillingProposalDtosGetBillingProposalSessionBalanceDto": {
        "type": "object",
        "additionalProperties": false
      },
      "C4WX1APIFeaturesBillingProposalDtosDeleteBillingProposalDto": {
        "type": "object",
        "example": {
          "UserId": 1
        },
        "additionalProperties": false,
        "properties": {
          "UserId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "C4WX1APIFeaturesBillingProposalDtosCreateBillingProposalDto": {
        "type": "object",
        "example": {
          "PatientID_FK": 1,
          "Title": "Title",
          "SendEmail": true,
          "EmailPatient": true,
          "EmailTo": "test-to@gmail.com",
          "EmailCC": "test-cc@gmail.com",
          "EmailBCC": "test-bcc@gmail.com",
          "CurrencyID_FK": 1,
          "Status": "Active",
          "GroupNumber": "1",
          "Version": 1,
          "ProposalType": "ProposalType",
          "UserId": 1,
          "ServiceList": [
            {
              "BillingInvoiceServiceID": 0,
              "BillingProposalID_FK": 0,
              "ServiceID_FK": 1,
              "CategoryId": 0,
              "Title": null,
              "StartDate": "2025-02-27T23:51:34.5585733+08:00",
              "EndDate": "2025-02-27T23:51:34.558576+08:00",
              "UnitCost": 0.0,
              "Duration1": "Duration1",
              "Duration2": "Duration2",
              "Visit": 1,
              "Session": 0,
              "Discount": 0.0,
              "ServiceDescription": "ServiceDescription",
              "CategoryName": null
            }
          ]
        },
        "additionalProperties": false,
        "properties": {
          "PatientID_FK": {
            "type": "integer",
            "format": "int32"
          },
          "Title": {
            "type": "string"
          },
          "SendEmail": {
            "type": "boolean",
            "nullable": true
          },
          "EmailPatient": {
            "type": "boolean",
            "nullable": true
          },
          "EmailTo": {
            "type": "string",
            "nullable": true
          },
          "EmailCC": {
            "type": "string",
            "nullable": true
          },
          "EmailBCC": {
            "type": "string",
            "nullable": true
          },
          "CurrencyID_FK": {
            "type": "integer",
            "format": "int32"
          },
          "Status": {
            "type": "string"
          },
          "GroupNumber": {
            "type": "string"
          },
          "Version": {
            "type": "integer"
          },
          "ProposalType": {
            "type": "string"
          },
          "UserId": {
            "type": "integer",
            "format": "int32"
          },
          "ServiceList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/C4WX1APIFeaturesBillingProposalDtosBillingProposalServiceDto"
            }
          }
        }
      },
      "C4WX1APIFeaturesAPIAccessKeyDtosAPIAccessKeyDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "APIAccessKeyID": {
            "type": "integer",
            "format": "int32"
          },
          "TokenCode": {
            "type": "string"
          },
          "AccessKey": {
            "type": "string"
          },
          "ExpiryDate": {
            "type": "string",
            "format": "date-time"
          },
          "CreatedDate": {
            "type": "string",
            "format": "date-time"
          },
          "UpdatedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "UserId_FK": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "C4WX1APIFeaturesAPIAccessKeyDtosGetAPIAccessKeyDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/C4WX1APIFeaturesSharedDtosGetByIdDto"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "C4WX1APIFeaturesAPIAccessKeyDtosCreateAPIAccessKeyDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Code": {
            "type": "string"
          },
          "UserId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "C4WX1APIFeaturesActivityDtosUpdateActivityDto": {
        "type": "object",
        "example": {
          "ProblemListID_FK": 1,
          "DiseaseID_FK": 1,
          "ActivityDetail": "Activity Detail",
          "DiseaseSubInfoID_FK": 1,
          "UserId": 1
        },
        "additionalProperties": false,
        "properties": {
          "ProblemListID_FK": {
            "type": "integer",
            "format": "int32"
          },
          "DiseaseID_FK": {
            "type": "integer",
            "format": "int32"
          },
          "ActivityDetail": {
            "type": "string"
          },
          "DiseaseSubInfoID_FK": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "UserId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "C4WX1APIFeaturesActivityDtosActivityDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ActivityID": {
            "type": "integer",
            "format": "int32"
          },
          "ProblemListID_FK": {
            "type": "integer",
            "format": "int32"
          },
          "DiseaseID_FK": {
            "type": "integer",
            "format": "int32"
          },
          "ActivityDetail": {
            "type": "string"
          },
          "IsDeleted": {
            "type": "boolean"
          },
          "CreatedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "CreatedBy_FK": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ModifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "ModifiedBy_FK": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "DiseaseSubInfoID_FK": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "CanDelete": {
            "type": "boolean"
          }
        }
      },
      "C4WX1APIFeaturesActivityDtosCreateActivityDto": {
        "type": "object",
        "example": {
          "ProblemListID_FK": 1,
          "DiseaseID_FK": 1,
          "ActivityDetail": "Activity Detail",
          "DiseaseSubInfoID_FK": 1,
          "UserId": 1
        },
        "additionalProperties": false,
        "properties": {
          "ProblemListID_FK": {
            "type": "integer",
            "format": "int32"
          },
          "DiseaseID_FK": {
            "type": "integer",
            "format": "int32"
          },
          "ActivityDetail": {
            "type": "string"
          },
          "DiseaseSubInfoID_FK": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "UserId": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "securitySchemes": {
      "JWTBearerAuth": {
        "type": "http",
        "description": "Enter a JWT token to authorize the requests...",
        "scheme": "Bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}