name: Deploy to ECS

on:
  push:
    branches:
      - master  # Trigger only on master branch update
  workflow_dispatch:  # Allow manual trigger

env:
  AWS_REGION: ap-southeast-1  # Update with your AWS region
  ECR_REPOSITORY: c4wx1-api  # Update with your ECR repository name
  ECS_CLUSTER: c4wx1-api-cluster  # Update with your ECS cluster name
  ECS_SERVICE: c4wx1-api-uat  # Update with your ECS service name
  ECS_TASK_DEFINITION: ecs-task-definition.json  # Path to your task definition file

jobs:
  deploy:
    name: Deploy to ECS
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Generate Image Tag (Date + Commit Hash)
        id: tag
        run: |
          TIMESTAMP=$(date +"%Y%m%d")
          COMMIT_HASH=$(git rev-parse --short HEAD)
          IMAGE_TAG="$TIMESTAMP-$COMMIT_HASH"
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          echo "Generated Image Tag: $IMAGE_TAG"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, Tag, and Push Docker Image to ECR
        run: |
          IMAGE_URI="${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG"
          docker build -t $IMAGE_URI .
          docker push $IMAGE_URI
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV
          echo "Pushed Image: $IMAGE_URI"

      - name: Download ECS Task Definition
        run: |
          aws ecs describe-task-definition --task-definition ${{ env.ECS_SERVICE }} \
          --query taskDefinition > task-definition.json

      - name: Update ECS Task Definition with New Image
        id: update-task-def
        run: |
          NEW_TASK_DEF=$(jq --arg IMAGE_URI "$IMAGE_URI" \
            '.containerDefinitions[0].image = $IMAGE_URI' task-definition.json)
          echo "$NEW_TASK_DEF" > new-task-def.json
          echo "UPDATED_TASK_DEF=new-task-def.json" >> $GITHUB_ENV

      - name: Register New ECS Task Definition
        id: register-task-def
        run: |
          TASK_REVISION=$(aws ecs register-task-definition --cli-input-json file://${{ env.UPDATED_TASK_DEF }} \
            --query "taskDefinition.revision" --output text)
          echo "TASK_REVISION=$TASK_REVISION" >> $GITHUB_ENV
          echo "Registered New Task Definition Revision: $TASK_REVISION"

      - name: Deploy New Task Definition to ECS
        run: |
          aws ecs update-service --cluster ${{ env.ECS_CLUSTER }} \
          --service ${{ env.ECS_SERVICE }} \
          --task-definition ${{ env.ECS_SERVICE }}:${{ env.TASK_REVISION }} \
          --force-new-deployment

      - name: Output Deployment Details
        run: |
          echo "Deployment successful! New ECS Task Definition: ${{ env.TASK_REVISION }}"
