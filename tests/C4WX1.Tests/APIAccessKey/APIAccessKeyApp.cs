using C4WX1.Database.Models;
using C4WX1.DbMigrator.DataSeeders;
using Dapper;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.DependencyInjection;
using Npgsql;
using Serilog;

namespace C4WX1.Tests.APIAccessKey
{
    public class APIAccessKeyApp : C4WX1App
    {
        protected override async ValueTask SetupAsync()
        {
            using var connection = new NpgsqlConnection(_container.GetConnectionString());
            await connection.ExecuteAsync("""
                CREATE TABLE "Types" (
                    "code" VARCHAR(100) NOT NULL,
                    "codeValue" VARCHAR(200) NOT NULL,
                    "parentCode" VARCHAR(100),
                    "ordering" INTEGER NOT NULL,
                    "created" TIMESTAMP WITHOUT TIME ZONE NOT NULL,
                    "updated" TIMESTAMP WITHOUT TIME ZONE,
                    CONSTRAINT "PK__Types__357D4CF8F524A549" PRIMARY KEY ("code"),
                    CONSTRAINT "fk_Types_parentCode" FOREIGN KEY ("parentCode") REFERENCES "Types" ("code")
                );

                CREATE INDEX "idx_Types1" ON "Types" ("code", "parentCode");

                CREATE INDEX "IX_Types_parentCode" ON "Types" ("parentCode");

                CREATE TABLE "APIAccessKey" (
                    "APIAccessKeyID" INTEGER GENERATED BY DEFAULT AS IDENTITY,
                    "TokenCode" VARCHAR(100) NOT NULL,
                    "AccessKey" VARCHAR(200) NOT NULL,
                    "ExpiryDate" TIMESTAMP WITHOUT TIME ZONE NOT NULL,
                    "CreatedDate" TIMESTAMP WITHOUT TIME ZONE NOT NULL,
                    "UpdatedDate" TIMESTAMP WITHOUT TIME ZONE,
                    "UserId_FK" INTEGER,
                    CONSTRAINT "FK_APIAccessKey_TokenCode" FOREIGN KEY ("TokenCode") REFERENCES "Types" ("code"),
                    CONSTRAINT "PK__APIAcces__79CAEB20D6CC8EEA" PRIMARY KEY ("APIAccessKeyID")
                );

                CREATE TABLE "SysConfig" (
                    "ConfigName" VARCHAR(50) NOT NULL,
                    "ConfigValue" TEXT,
                    "ModifiedDate" TIMESTAMP WITHOUT TIME ZONE,
                    "ModifiedBy_FK" INTEGER,
                    "IsConfigurable" BOOLEAN,
                    "Description" TEXT,
                    CONSTRAINT "PK_SysConfig" PRIMARY KEY ("ConfigName")
                );
                """);

            var serviceProvider = new ServiceCollection()
                .AddLogging(builder => builder.AddSerilog())
                .AddDbContext<THCC_C4WDEVContext>(options =>
                    options.UseNpgsql(_container.GetConnectionString()))
                .AddTransient<SysConfigDataSeeder>()
                .AddTransient<TypeDataSeeder>()
                .BuildServiceProvider();

            using var scope = serviceProvider.CreateScope();
            var dbContext = scope.ServiceProvider.GetRequiredService<THCC_C4WDEVContext>();
            var sysConfigSeeder = scope.ServiceProvider.GetRequiredService<SysConfigDataSeeder>();
            var typeSeeder = scope.ServiceProvider.GetRequiredService<TypeDataSeeder>();
            await sysConfigSeeder.SeedAsync();
            await typeSeeder.SeedAsync();

            await base.SetupAsync();
        }
    }
}
